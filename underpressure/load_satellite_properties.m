function sateliiteproperties = load_satellite_properties(workbookFile, sheetName, dataLines)
%IMPORTFILE Import data from a spreadsheet
%  SATELIITEPROPERTIES = IMPORTFILE(FILE) reads data from the first
%  worksheet in the Microsoft Excel spreadsheet file named FILE.
%  Returns the data as a table.
%
%  SATELIITEPROPERTIES = IMPORTFILE(FILE, SHEET) reads from the
%  specified worksheet.
%
%  SATELIITEPROPERTIES = IMPORTFILE(FILE, SHEET, DATALINES) reads from
%  the specified worksheet for the specified row interval(s). Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  sateliiteproperties = importfile("/Users/max/Desktop/icymoons_thermal_stress/underpressure/sateliite properties.xlsx", "Sheet1", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 09-Jan-2025 18:46:06

%% Input handling

% If no sheet is specified, read from Sheet1
if nargin == 1 || isempty(sheetName)
    sheetName = "Sheet1";
end

% If row start and end points are not specified, define defaults
if nargin <= 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 6);

% Specify sheet and range
opts.Sheet = sheetName;
opts.DataRange = dataLines(1, :);

% Specify column names and types
opts.VariableNames = ["Satellite", "R", "M", "g", "MOI", "VarName6"];
opts.VariableTypes = ["string", "double", "double", "double", "double", "categorical"];

% Specify variable properties
opts = setvaropts(opts, "Satellite", "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Satellite", "VarName6"], "EmptyFieldRule", "auto");

% Import the data
sateliiteproperties = readtable(workbookFile, opts, "UseExcel", false);

for idx = 2:size(dataLines, 1)
    opts.DataRange = dataLines(idx, :);
    tb = readtable(workbookFile, opts, "UseExcel", false);
    sateliiteproperties = [sateliiteproperties; tb]; %#ok<AGROW>
end

end